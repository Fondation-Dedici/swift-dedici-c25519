//
// Copyright (c) 2022 DediÄ‰i
// SPDX-License-Identifier: AGPL-3.0-only
//

import Foundation
import XCTest
@testable import DediciC25519

internal final class PublicKeyTests: XCTestCase {
    func testPublicFromPrivate1() throws {
        let publicKeyData = Data([
            0xF1, 0xF4, 0x38, 0x74, 0xF6, 0x96, 0x69, 0x56,
            0xC2, 0xDD, 0x47, 0x3F, 0x8F, 0xA1, 0x5A, 0xDE,
            0xB7, 0x1D, 0x1C, 0xB9, 0x91, 0xB2, 0x34, 0x16,
            0x92, 0x32, 0x4C, 0xEF, 0xB1, 0xC5, 0xE6, 0x26,
        ])

        let privateKeyData = Data([
            0x48, 0x75, 0xCC, 0x69, 0xDD, 0xF8, 0xEA, 0x07,
            0x19, 0xEC, 0x94, 0x7D, 0x61, 0x08, 0x11, 0x35,
            0x86, 0x8D, 0x5F, 0xD8, 0x01, 0xF0, 0x2C, 0x02,
            0x25, 0xE5, 0x16, 0xDF, 0x21, 0x56, 0x60, 0x5E,
        ])

        let privateKey = try PrivateKey(from: privateKeyData)
        let publicKey = privateKey.publicKey

        XCTAssertEqual(publicKey.rawRepresentation, publicKeyData)
    }

    func testPublicFromPrivate2() throws {
        let publicKeyData = Data([
            0x04, 0xA4, 0xD5, 0x0E, 0x95, 0x43, 0x34, 0x12,
            0xC5, 0x0D, 0x72, 0x04, 0xA1, 0x07, 0xCD, 0x90,
            0x4B, 0x43, 0x32, 0x90, 0x61, 0x4C, 0x4D, 0x98,
            0xD0, 0x94, 0x9D, 0x44, 0x14, 0xAC, 0x92, 0x65,
        ])

        let privateKeyData = Data([
            0xA1, 0xCA, 0xB4, 0x8F, 0x7C, 0x89, 0x3F, 0xAF,
            0xA9, 0x88, 0x0A, 0x28, 0xC3, 0xB4, 0x99, 0x9D,
            0x28, 0xD6, 0x32, 0x95, 0x62, 0xD2, 0x7A, 0x4E,
            0xA4, 0xE2, 0x2E, 0x9F, 0xF1, 0xBD, 0xD6, 0x5A,
        ])

        let privateKey = try PrivateKey(from: privateKeyData)
        let publicKey = privateKey.publicKey

        XCTAssertEqual(publicKey.rawRepresentation, publicKeyData)
    }

    func testPublicFromPrivate3() throws {
        let publicKeyData = Data([
            0xAC, 0x24, 0x8A, 0x8F, 0x26, 0x3B, 0xE6, 0x86,
            0x35, 0x76, 0xEB, 0x03, 0x62, 0xE2, 0x8C, 0x82,
            0x8F, 0x01, 0x07, 0xA3, 0x37, 0x9D, 0x34, 0xBA,
            0xB1, 0x58, 0x6B, 0xF8, 0xC7, 0x70, 0xCD, 0x67,
        ])

        let privateKeyData = Data([
            0x58, 0x39, 0x00, 0x13, 0x1F, 0xB7, 0x27, 0x99,
            0x8B, 0x78, 0x03, 0xFE, 0x6A, 0xC2, 0x2C, 0xC5,
            0x91, 0xF3, 0x42, 0xE4, 0xE4, 0x2A, 0x8C, 0x8D,
            0x5D, 0x78, 0x19, 0x42, 0x09, 0xB8, 0xD2, 0x53,
        ])

        let privateKey = try PrivateKey(from: privateKeyData)
        let publicKey = privateKey.publicKey

        XCTAssertEqual(publicKey.rawRepresentation, publicKeyData)
    }

    func testPublicFromPrivate4() throws {
        let publicKeyData = Data([
            0xE2, 0xC0, 0x58, 0x60, 0xF2, 0xAC, 0x6B, 0x2B,
            0x57, 0xBA, 0x56, 0x4B, 0x42, 0x1F, 0xFE, 0x71,
            0xE4, 0xB1, 0x28, 0xC5, 0x91, 0xE4, 0x6E, 0x04,
            0x91, 0xCC, 0x9B, 0x33, 0xDB, 0xF2, 0x2A, 0x27,
        ])

        let privateKeyData = Data([
            0x11, 0xAE, 0x7C, 0x64, 0xD1, 0xE6, 0x1C, 0xD5,
            0x96, 0xB7, 0x6A, 0x0D, 0xB5, 0x01, 0x26, 0x73,
            0x39, 0x1C, 0xAE, 0x66, 0xED, 0xBF, 0xCF, 0x07,
            0x3B, 0x4D, 0xA8, 0x05, 0x16, 0xA4, 0x74, 0x49,
        ])

        let privateKey = try PrivateKey(from: privateKeyData)
        let publicKey = privateKey.publicKey

        XCTAssertEqual(publicKey.rawRepresentation, publicKeyData)
    }

    func testPublicFromPrivate5() throws {
        let publicKeyData = Data([
            0xB4, 0xA8, 0x45, 0x56, 0x60, 0xAD, 0xA6, 0x5B,
            0x40, 0x10, 0x07, 0xF6, 0x15, 0xE6, 0x54, 0x04,
            0x17, 0x46, 0x43, 0x2E, 0x33, 0x39, 0xC6, 0x87,
            0x51, 0x49, 0xBC, 0xEE, 0xFC, 0xB4, 0x2B, 0x4A,
        ])

        let privateKeyData = Data([
            0x90, 0x40, 0xF0, 0xD4, 0xE0, 0x9C, 0xF3, 0x8F,
            0x6D, 0xC7, 0xC1, 0x37, 0x79, 0xC9, 0x08, 0xC0,
            0x15, 0xA1, 0xDA, 0x4F, 0xA7, 0x87, 0x37, 0xA0,
            0x80, 0xEB, 0x0A, 0x6F, 0x4F, 0x5F, 0x8F, 0x58,
        ])

        let privateKey = try PrivateKey(from: privateKeyData)
        let publicKey = privateKey.publicKey

        XCTAssertEqual(publicKey.rawRepresentation, publicKeyData)
    }
}
